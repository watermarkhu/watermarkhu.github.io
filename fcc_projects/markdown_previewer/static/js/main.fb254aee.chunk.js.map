{"version":3,"sources":["reportWebVitals.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","marked","require","use","renderer","link","href","title","text","setOptions","breaks","App","props","state","markdown","default_text","view","event","this","setState","target","value","val","Container","fluid","onChange","handleView","bind","View","handleChange","React","Component","Header","Row","Col","xs","md","ToggleButtonGroup","type","name","defaultValue","ToggleButton","Editor","Preview","Split","Form","Control","as","rows","id","Card","Body","dangerouslySetInnerHTML","__html","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,sDCQRQ,G,MAASC,EAAQ,KASvBD,EAAOE,IAAI,CAAEC,SALI,CACfC,KADe,SACVC,EAAMC,EAAOC,GAChB,MAAM,4BAAN,OAAmCF,EAAnC,aAA4CE,EAA5C,YAIJP,EAAOQ,WAAW,CAChBC,QAAQ,I,IAKJC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAUC,EACVC,KAAM,SAJS,E,yDAONC,GACXC,KAAKC,SAAS,CACZL,SAAUG,EAAMG,OAAOC,U,iCAGhBC,GACTJ,KAAKC,SAAS,CACZH,KAAMM,M,+BAIR,OACE,eAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,uBACA,cAAC,EAAD,CAAQC,SAAUP,KAAKQ,WAAWC,KAAKT,QACvC,uBACA,cAACU,EAAD,CAAMZ,KAAME,KAAKL,MAAMG,KAAMF,SAAUI,KAAKL,MAAMC,SAAUW,SAAUP,KAAKW,aAAaF,KAAKT,e,GAxBnFY,IAAMC,WA8BlBC,EAAS,SAAApB,GACb,OACE,cAACW,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,eAACS,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,SACE,sDAEF,cAACF,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,SACE,eAACC,EAAA,EAAD,CAAmBC,KAAK,QAAQC,KAAK,UAAUC,aAAc,QAASf,SAAUb,EAAMa,SAAtF,UACE,cAACgB,EAAA,EAAD,CAAcpB,MAAO,QAArB,mBACA,cAACoB,EAAA,EAAD,CAAcpB,MAAO,SAArB,oBACA,cAACoB,EAAA,EAAD,CAAcpB,MAAO,UAArB,gCAQNO,EAAO,SAAAhB,GACX,OAAQA,EAAMI,MACZ,IAAK,SACH,OAAO0B,EAAO9B,GAChB,IAAK,UACH,OAAO+B,EAAQ/B,GACjB,QACE,OAAOgC,EAAMhC,KAIb8B,EAAS,SAAA9B,GACb,OACE,cAACiC,EAAA,EAAKC,QAAN,CAAcC,GAAG,WAAWC,KAAM,GAAIC,GAAG,SAASxB,SAAUb,EAAMa,SAAUa,KAAK,OAAOjB,MAAOT,EAAME,YAInG6B,EAAU,SAAA/B,GACd,OACE,cAACsC,EAAA,EAAD,CAAMf,GAAI,GAAIC,GAAI,EAAlB,SACE,cAACc,EAAA,EAAKC,KAAN,CAAWC,wBAAyB,CAACC,OAAQpD,EAAOW,EAAME,WAAYmC,GAAG,eAKzEL,EAAQ,SAAAhC,GACZ,OACE,eAACqB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,SACE,cAAC,EAAD,CAAQtB,SAAUF,EAAME,SAAUW,SAAUb,EAAMa,aAEpD,cAAC,EAAD,CAASX,SAAUF,EAAME,eAKzBC,EAAY,kuBA0BlBuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BlE,M","file":"static/js/main.fb254aee.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst marked = require('marked')\n\n// Set marked renderer\n// Override function, required for codepen\nconst renderer = {\n  link(href, title, text) {\n    return `<a target=\"_blank\" href=\"${href}\">${text}</a>`;\n  }\n};\nmarked.use({ renderer });\nmarked.setOptions({\n  breaks: true\n});\n\n// React app\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      markdown: default_text,\n      view: \"Split\"\n    };\n  }\n  handleChange(event) {\n    this.setState({\n      markdown: event.target.value\n    });\n  }\n  handleView(val) {\n    this.setState({\n      view: val\n    })\n  };\n  render() {\n    return (\n      <Container fluid>\n        <br/>\n        <Header onChange={this.handleView.bind(this)}/>\n        <br/>\n        <View view={this.state.view} markdown={this.state.markdown} onChange={this.handleChange.bind(this)}/>\n      </Container>\n    );\n  };\n};\n\nconst Header = props => {\n  return (\n    <Container fluid>\n      <Row>\n        <Col xs={12} md={6}>\n          <h3>Markdown Previewer</h3>\n        </Col>\n        <Col xs={12} md={6}>\n          <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={\"Split\"} onChange={props.onChange}>\n            <ToggleButton value={\"Split\"}>Split</ToggleButton>\n            <ToggleButton value={\"Editor\"}>Editor</ToggleButton>\n            <ToggleButton value={\"Preview\"}>Preview</ToggleButton>\n          </ToggleButtonGroup>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nconst View = props => {\n  switch (props.view) {\n    case \"Editor\":\n      return Editor(props);\n    case \"Preview\":\n      return Preview(props);\n    default:\n      return Split(props);\n  };\n};\n\nconst Editor = props => {\n  return (\n    <Form.Control as=\"textarea\" rows={10} id='editor' onChange={props.onChange} type='text' value={props.markdown}/>\n  );\n};\n\nconst Preview = props => {\n  return (\n    <Card xs={12} md={6}>\n      <Card.Body dangerouslySetInnerHTML={{__html: marked(props.markdown)}} id='preview'/>\n    </Card>\n  );\n};\n\nconst Split = props => {\n  return (\n    <Row>\n      <Col xs={12} md={6}>\n        <Editor markdown={props.markdown} onChange={props.onChange} />\n      </Col>\n      <Preview markdown={props.markdown} />\n    </Row>\n  );\n};\n\nconst default_text = `# This the default Markdown text \n\nThis markdown previewer has been built as a solution to one of the [FreeCodeCamp](https://freecodecamp.com) challenges.\n## How its built\n\nThis previewer is built using:\n\n* React\n* React Bootstrap\n\n> React-Bootstrap is a complete re-implementation of the Bootstrap components using React.\n\nReact bootstrap **differs** from vanilla bootstrap as it has a different syntax for JSX elements.\nE.G. instead of \\`<div class=\"row\"/>\\` we have \\`<Row/>\\`. A full grid with one row and column element is\n\n\\`\\`\\`\n<Container fluid=\"md\">\n  <Row>\n    <Col>1 of 1</Col>\n  </Row>\n</Container>\n\\`\\`\\`\n\n![React-bootstrap](https://raw.githubusercontent.com/Swe-HimelRana/React-Bootstrap-4/master/icon.png)\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}